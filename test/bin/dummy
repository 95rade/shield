#!/bin/bash
# dummy - a Dummy store/target plugin for testing and development

ENDPOINT_CONFIG=""
RESTORE_KEY=""

bail() {
	echo >&2 $*
	exit 1
}

target_plugin_options() {
	while (( $# > 0 )); do
		case "${1}" in
		(-c)
			shift
			[[ -z "${1}" ]] && bail "-c: requires a value"
			ENDPOINT_CONFIG="${1}"
			shift
			;;
		(-*)
			bail "unrecognized option ${1}"
			;;
		(*)
			bail "unhandled command-line argument '${1}'"
			;;
		esac
	done

	[[ -z "${ENDPOINT_CONFIG}" ]] && bail "missing required -c option"
}

store_plugin_options() {
	while (( $# > 0 )); do
		case "${1}" in
		(-c)
			shift
			[[ -z "${1}" ]] && bail "-c: requires a value"
			ENDPOINT_CONFIG="${1}"
			shift
			;;
		(-k)
			shift
			[[ -z "${1}" ]] && bail "-k: requires a value"
			RESTORE_KEY="${1}"
			shift
			;;
		(-*)
			bail "unrecognized option ${1}"
			;;
		(*)
			bail "unhandled command-line argument '${1}'"
			;;
		esac
	done

	[[ -z "${ENDPOINT_CONFIG}" ]] && bail "missing required -c option"
}

case "${1}" in
(info)
	cat << JSON
{
  "name": "Dummy Plugin",
  "author": "James Hunt <jhunt@starkandwayne.com>",
  "version": "1",
  "features": {
    "target": "yes",
    "store":  "yes"
  }
}
JSON
	exit 0
	;;

(backup)
	shift
	target_plugin_options "$@"
	# our fake "data"
	echo "((( ${ENDPOINT_CONFIG} )))"
	exit 0
	;;

(restore)
	shift
	target_plugin_options "$@"
	# nothing to do
	exit 0
	;;

(store)
	shift
	store_plugin_options "$@"
	[[ -z "${RESTORE_KEY}" ]] || echo >&2 "ignoring key"
	RESTORE_KEY=$(sha1sum)
	cat << JSON
{
  "key": "${RESTORE_KEY%%[ -]*}"
}
JSON
	exit 0
	;;

(retrieve)
	shift
	store_plugin_options "$@"
	[[ -z "${RESTORE_KEY}" ]] && bail "restore operation requires a restore key (via -k)"
	# different fake data...
	echo "data for ${RESTORE_KEY}"
	exit 0
	;;

(*)
	echo >&2 "unrecognized command '${1}'"
	exit 1
	;;
esac
